// LESS Mixin Library
// (CB = Cross Browser)

// i18n Layout version of left/right dependant properties
@direction: ltr;
@dir: left;
@dirOp: right;

// Margin (CB) (to use: .margin(@dir, 20px); or .margin(@dirOp, 0px))
.margin(left, @dist: @gutter) {
    margin-left: @dist;
}
.margin(right, @dist: @gutter) {
    margin-right: @dist;
}

// Padding (CB)
.padding(left, @dist: @gutter) {
    padding-left: @dist;
}
.padding(right, @dist: @gutter) {
    padding-right: @dist;
}

// Left/Right (CB) (.lr(@dir, 10px) == left:10px; or right:10px based on @dir)
.lr(left, @dist: 0) {
	left: @dist;
}
.lr(right, @dist: 0) {
	right: @dist;
}

// Clearfix (CB)
.clearfix {
	zoom: 1;
	&:before, &:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

// Opacity (CB)
.opacity(@value) {
	opacity: @value / 100;
	-khtml-opacity: @value / 100;
	-moz-opacity: @value / 100;
	-ms-filter: %('alpha(opacity=%s)', @value);
	filter: e(%("alpha(opacity=%s)", @value));
}

// TODO: breakouts for separate border radiuses
.border-radius(@radius: 10px) {
	-khtml-border-radius: @radius;
	-moz-border-radius: @radius;
	-webkit-border-radius: @radius;
	border-radius: @radius;
}

// Center Block Element (CB)
.center {
	margin-right: auto;
	margin-left: auto;
	text-align: center;
}

// TODO: add inset
.box-shadow(@offsetTop: 1px, @offsetLeft: 0, @blur: 2px, @color: rgba(0,0,0,0.15)) {
	box-shadow: @offsetTop @offsetLeft @blur @color;
	-moz-box-shadow: @offsetTop @offsetLeft @blur @color;
	-webkit-box-shadow: @offsetTop @offsetLeft @blur @color;
}

// Gradients (CB) 
// Horizontal Gradient
.gradient-horizontal(@startColor: #555, @endColor: #333) {
	background-color: @endColor;
	background-repeat: no-repeat;
	background-image: -webkit-gradient(linear, left top, right top, from(@startColor), to(@endColor));
	background-image: -webkit-linear-gradient(right center, @startColor, @endColor);
	background-image: -moz-linear-gradient(right center, @startColor, @endColor);
	background-image: -o-linear-gradient(left, @startColor, @endColor);
	background-image: -khtml-gradient(linear, left top, right top, from(@startColor), to(@endColor));
	filter: e(%("progid:DXImageTransform.Microsoft.Gradient(StartColorStr='%d', EndColorStr='%d', GradientType=1)", @startColor, @endColor));
	-ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorStr='%d', EndColorStr='%d', GradientType=1))", @startColor, @endColor);
}

// Vertical Gradient
.gradient-vertical(@startColor: #555, @endColor: #333) {
	background-color: @endColor;
	background-repeat: no-repeat;
	background-image: -webkit-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
	background-image: -webkit-linear-gradient(@startColor, @endColor);
	background-image: -moz-linear-gradient(@startColor, @endColor);
	background-image: -o-linear-gradient(top, @startColor, @endColor);
	background-image: -khtml-gradient(linear, left top, left bottom, from(@startColor), to(@endColor));
	filter: e(%("progid:DXImageTransform.Microsoft.Gradient(StartColorStr='%d', EndColorStr='%d', GradientType=0)", @startColor, @endColor));
	-ms-filter: %("progid:DXImageTransform.Microsoft.gradient(startColorStr='%d', EndColorStr='%d', GradientType=0))", @startColor, @endColor);
}

// Min-Height (CB)
.min-height(@height) {
	min-height: @height;
	height: auto !important;
	height: @height;
}

// Resize (make an element resizable)
.resize(@value: both) {
	-webkit-resize: @value; 
	-moz-resize: @value; 
	resize: @value; 
}

// Transform
.transform(@params) {
	-webkit-transform: @params;
	-moz-transform: @params;
	-o-transform: @params;
	transform: @params;
}

// Rotate TODO: Check CB
.rotate(@deg: 35){
	.transform( e(%("rotate(%ddeg)", @deg) );
}

.transition(@prop: all, @time: .5s, @easing: ease-in-out){
	transition: @prop @time @easing;
	-moz-transition: @prop @time @easing;
	-o-transition: @prop @time @easing;
	-webkit-transition: @prop @time @easing;
}

// Force word wrap on single non-breaking strings
.word-wrap {
	white-space: pre; 
	white-space: pre-wrap;
	white-space: pre-line;
	word-wrap: break-word;
}

// Allow IE6 to render 24bit png
.ie6-pngfix(@png) {
	background: transparent;
	filter: e(%("progid:DXImageTransform.Microsoft.AlphaImageLoader(src='%d', sizingMethod='scale')", @png));
}

// Display a list of links horizontally (CB) 
.horizontal {
	ul, ol {
		display: block;
		.margin(@dir, 0);
	}
	li {
		display: inline;
		float: @dir;
	}
	a {
		display: block;
		float: @dir;
	}
}

// TODO: Grid/Columns system?
.columns(@count: 3, @gutter: 10px) {
	
}
